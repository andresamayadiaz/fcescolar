<div class="paragraphs">
	<div class="row">
		<div class="col-sm-12">
			<div class='form-group'>
				<label class="col-md-1">Person</label>
        <div class="col-md-3"><%= text_field_tag 'search_person_name', @person.try(:name), {:class=>'form-control'} %></div>
			  <div class='col-md-8'>
				  <button type="button" class="btn btn-sm btn-info" data-toggle="modal" data-target="#searchModal">Search</button>
			  </div>
			</div>
		</div>
		<% if @person.present? %>
		<div class="col-sm-12">
			<br/><br/>
			<div class="col-sm-6">Study location for the last academic degree:</div>
			<%= simple_form_for(@person, {:url=>update_country_and_state_people_url, :html=>{:class=>'form-inline'} } )  do |f| %>
			<%= f.input :id, as: :hidden %>
			<div class="col-sm-3">
				<%= f.association :country, label: false %>
			</div>
			<div class="col-sm-3">
				<%= f.association :state, label: false %>
			</div>
			<% end %>
		</div>
		<div class="col-sm-12" style="overflow:hidden;">
			<br/><br/>
			<div class="col-sm-6">
				<fieldset>
					<legend>Attach New Document</legend>
					<%= simple_form_for(@new_personal_record_file, { :url=>upload_document_people_url, :html=>{:multipart=>true} } ) do |f| %>
					<%= f.association :background_official_doc,:label => "Type" ,:include_blank => 'Document Category' %>
					<%= f.input :document, :label=>'Attach New Document' %>
					<%= f.input :is_responsive_letter, :label=>'Is Responsive Letter ?' %>
					<%= f.input :person_id, :as => :hidden, :input_html => { :value => @person.id } %>
					<%= f.input :attach_user_id, :as => :hidden, :input_html => { :value => current_user.id } %>
          <button class='btn btn-sm btn-primary button right'>Load</button>
					<% end %>
				</fieldset>
			</div>
			<div class="col-sm-6">
				<fieldset>
					<legend>Generate Responsive Letter</legend>
					<%= simple_form_for(@new_personal_record_file, { :url=>generate_responsive_letter_people_url} ) do |f| %>
					<%= f.association :background_official_doc, :as => :collection_select, :input_html => {:id=>'responsive_letter_template_menu'}, collection: BackgroundOfficialDoc.where('responsive_due_days >?', 0), :label => "Responsive Template" %>
					<%= f.input :motive %>
					<%= f.input :person_id, :as => :hidden, :input_html => { :value => @person.id } %>
					<%= f.input :is_responsive_letter, :as => :hidden, :input_html => { :value => true } %>
					<div class='form-action'>
            <button class='btn btn-sm btn-info'>Preview</button>
						<button data-toggle="modal" data-target="#signLetterModal" id='signLetterButton' class='btn btn-sm btn-success'>Sign Responsive Letter</button>
					</div>
					<% end %>
				</fieldset>
			</div>
		</div>
		<% if @attached_docs.present? %>
		<div class="col-sm-12">
			<br/><br/>
			<fieldset>
				<legend>Attached Documents</legend>
				<table class='table table-striped'>
					<thead>
						<tr>
							<th>Name</th>
							<th>Due Date</th>
							<th>Attach Date</th>
							<th>Attach User</th>
							<th>Matching Date</th>
							<th>Matching User</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						<% @attached_docs.each do |d| %>
						<tr>
							<td><%= link_to d.document_file_name, download_personal_record_file_people_url(:rec_file_id=>d.id) %></td>
							<td><%= d.due_date.to_date.strftime("%Y-%m-%d") rescue nil %></td>
							<td><%= d.created_at.to_date.strftime("%Y-%m-%d") %></td>
							<td><%= d.attach_user.name || d.attach_user.email %></td>
							<td><%= d.match_date %></td>
							<td><%= (d.match_user.name || d.match_user.email) if d.match_user.present? %></td>
							<% if d.match_user.blank? and d.match_date.blank? and d.has_been_matched.nil? %>
								<td>
									<a href='<%= matching_date_and_user_people_path(:rec_file_id=>d.id,:match=>true) %>' class='btn-sm btn-success match_date'>Match OK</a>&nbsp;
									<a href='<%= matching_date_and_user_people_path(:rec_file_id=>d.id,:match=>false) %>' class='btn-sm btn-danger match_user'>Match Not OK</a>
									</td>
							<% else %>
								<% if d.has_been_matched %>
									<td><span class="alert-success">OK</span></td>
								<% else %>
									<td><span class="alert-danger">Not OK</span></td>
								<% end %>
							<% end %>
						</tr>
						<% end %>
					</tbody>
				</table>
			</fieldset>
		</div>
		<% end %>
		<% end %>
	</div>
</div>

<%= render 'sign_letter_modal' if @person.present? %>

<%= render 'search_modal' %>

<% content_for :specific_js do %>
<script type="text/javascript">
	function get_state_by_country_id(country_select, state_select) {
		$('#'+country_select).change(function(){
			var val = $(this).val();
			$.ajax({
				type: 'GET',
				url: '/people/get_state_by_country_id?country_id='+val,
				success: function(data){
					if(data){
						var html_element='';
						$.each(data,function(index,value){
							html_element+="<option value="+value.id+">"+value.name+"</option>"
						})
						$('#'+state_select).html(html_element);
					}
				}
			})
		});
	}

	function match_date_and_user(element){
		element.click(function(e){
			e.preventDefault();
			var _this = $(this)
			var element_url = _this.attr('href')
			$.ajax({
				type: 'GET',
				url: element_url,
				success: function(data){
					console.log(data);
					_this.parent().prev().prev().html(data)
					_this.parent().prev().html('<%= current_user.name || current_user.email %>')
					if(_this.hasClass('btn-success')){
						_this.parent().html('<span class="alert-success">OK</span>')
					} else {
						_this.parent().html('<span class="alert-danger">Not OK</span>')
						alert('A notification has been sent.');
					}
				}
			})
		})
	}

	$(document).ready(function(){
		get_state_by_country_id('person_country_id', 'person_state_id');

		match_date_and_user($('a.match_date'));
		match_date_and_user($('a.match_user'));

		$('#person_state_id').parents('form').submit(function(e){
			e.preventDefault(); //STOP default action
			var _this = $(this);
			var postData = _this.serializeArray();
			var formURL = _this.attr("action");
			$.ajax(
			{
				url : formURL,
				type: "POST",
				data : postData,
				success:function(data){
					alert('Country and state is updated')
				},
				error: function(data){
					alert('Failed to update country and state')
				}
			});
		});

		$('#person_state_id').change(function(){
			$(this).parents('form').submit();
		})

		$('#responsive_letter_template_menu').change(function(){
			var _this_text = $("#responsive_letter_template_menu option:selected").text();
			$('#responsive-letter-template-name').html(_this_text);
		})


		$('#signLetterButton').click(function(){
			$('#sign_background_official_doc').val($('#responsive_letter_template_menu').val())
			$('#sign_motive').val($('#personal_record_file_motive').val());
		})

		$("#search-person-form").submit(function(e){
			e.preventDefault();
			var _this = $(this)
			_this.find(':button[type="submit"]').prop('disabled', true); 
			var postData = _this.serializeArray();
			var formURL = _this.attr("action");
			$('#search_person_result tbody').html('');
			$('#search_person_result').slideUp();
			$.ajax(
			{
				url : formURL,
				type: "POST",
				data : postData,
				success:function(data){
					if (data){
						var html_data = null;
						data.map(function(d){
							html_data = html_data + '<tr class="clickable-person" data-href="/people/manage_personal_record_file?id='+d.id+'"><td>'+d.fathers_maiden_name+
							'</td><td>'+d.mothers_maiden_name+'</td><td>'+d.name+'</td></tr>';
						})
						if (html_data==null){
							html_data = '<tr><td colspan="3">No se encontr√≥ persona</td></tr>'
						}
						$('#search_person_result tbody').html(html_data); 
						$('#search_person_result').slideDown(); 
					}
					_this.find(':button[type="submit"]').prop('disabled', false);
					$('.clickable-person').click(function(){
						window.location.href=$(this).attr('data-href')
					})
				}
			});
		})
  	});
</script>
<% end %>
<style type="text/css">
  tr.clickable-person { cursor: pointer;}
</style>
