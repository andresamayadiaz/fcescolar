<style>
div.users_role_study_levels {visibility:hidden;}
div.users_role_study_levels span{display: block!important;}
</style>
<div class="paragraphs">
	<div class="row">
		<div class="col-sm-12">
			<div class='form-group'>
				<label class="col-md-1"><%= t('people.singular') %></label>
        		<div class="col-md-3"><%= text_field_tag 'search_person_name', @person.try(:name), {:class=>'form-control'} %></div>
			  	<div class='col-md-8'>
				  <button type="button" class="btn btn-sm btn-info" data-toggle="modal" data-target="#searchModal"><%= t('general.search') %></button>
			  	</div>
			</div>
		</div>
  </div>
  <div class="row">
		<% if @unassigned_roles.present? and @person.status %>
		<div class="col-sm-12">
			<br/>
			<fieldset>
				<legend> <%= t('people.add_role') %> </legend>
				<%= simple_form_for(@new_user_role, {:url=>add_new_role_people_url, :html=>{:method=>'POST',:class=>'form-inline'} } )  do |f| %>
				  <%= f.input :user_id, :as => :hidden %>
				  <%= f.input :role_id, collection: @unassigned_roles.map { |r| [r.name.humanize, r.id] }, label:'Roles', class: 'form-control' %>
				  <%= f.input :contract, :label => t('general.contrato') %>
				  <%= f.input :contract_sign_date, :label => t('general.fecha_firma_contrato'), as: :string, input_html: { class: "datepicker" }  %>
				  <%= f.input :date_of_receipt, :label => t('general.fecha_recepcion'), as: :string, input_html: { class: "datepicker" }  %>
          		  <%= f.association :study_levels,:label => t('study_level.plural'), as: :check_boxes%>
		          <div class='form-group'><br/>
		      	    <%= button_tag( :class => "btn btn-primary btn-sm") do %>
					<i class="icon-save"></i><%= t('general.save') %>
					<% end %>
		          </div>
				<% end %>
			</fieldset>
		</div>
		<% end %>
  </div>
  <div class="row">
		<% if @person.user.roles.present? and @person.user.roles.length>0 %>
		<div class="col-sm-12">
			<br/>
			<table class='table'>
				<thead>
					<tr>
						<th><%= t('general.role') %></th>
            			<th><%= t('general.status') %></th>
            			<th><%= t('general.permit_sl_for_teacher') %></th>
					</tr>
				</thead>
				<tbody>
					<% @person.user.users_roles.each do |user_role| %>
					<tr class='<%= user_role.status ? 'success' : 'danger' %>'>
						<td><%= user_role.role.name.humanize %></td>
						<td>
							<%= simple_form_for(user_role, {url: change_role_status_people_path}) do |f| %>
							<%= f.input :user_id, :as => :hidden %>
							<%= f.input :role_id, :as => :hidden %>
							<%= f.collection_radio_buttons :status, [[true, 'Active'] ,[false, 'Inactive']], :first, :last %>
							<% end %>
            			</td>
            			<td><%= user_role.study_levels.map(&:name).join(", ") %></td>
					</tr>
					<% end %>
				</tbody>
			</table>
		</div>
		<% end %>
	</div>
</div>

<%= render 'search_modal' %>

<style>
	.edit_users_role span {
		margin-right:27px;
	}
	tr.clickable-person {
		cursor: pointer;
	}
</style>

<% content_for :specific_js do %>
<script type="text/javascript">
  $(document).ready(function(){

    $('#users_role_role_id').change(function(){
      if($(this).find("option:selected").text()=='Teacher'){
        $('div.users_role_study_levels').css('visibility','visible');
      } else {
        $('div.users_role_study_levels').css('visibility','hidden')  
      }
    })

    $('#searchModal').on('shown.bs.modal', function () {
      $('#fathers_maiden_name').focus();
    })

		$('.datepicker').datepicker({
	      format: "yyyy-mm-dd"
	    }).on('changeDate', function(e){
		    $(this).datepicker('hide');
		});
		$('.edit_users_role').submit(function(e){
			e.preventDefault(); //STOP default action
			var _this = $(this);
			var postData = _this.serializeArray();
      		var formURL = _this.attr("action");
			$.ajax(
			{
				url : formURL,
				type: "POST",
				data : postData,
				success:function(data){
          if (data) {
            _this.parents('tr').removeClass('danger').addClass('success');
          } else {
            _this.parents('tr').removeClass('active').addClass('danger');
          }
					alert('Role status is updated')
				},
				error: function(data){
					alert('Failed to update role status')
				}
			});
		});

		$(".edit_users_role").each(function(){
			$(this).find("[type=radio]").change(function(){
				$(this).parents("form").submit();
			})
		})

		$('#search_person_name').bind('railsAutocomplete.select', function(event, data){
		  $('#search_person_by_name').attr('href','/people/assign_roles?id='+data.item.id)
		});

		$("#search-person-form").submit(function(e){
			e.preventDefault();
			var _this = $(this)
			_this.find(':button[type="submit"]').prop('disabled', true); 
			var postData = _this.serializeArray();
			var formURL = _this.attr("action");
			$('#search_person_result tbody').html('');
			$('#search_person_result').slideUp();
			$.ajax(
			{
				url : formURL,
				type: "POST",
				data : postData,
				success:function(data){
					if (data){
						var html_data = null;
						data.map(function(d){
              console.log(d);
							html_data = html_data + '<tr class="clickable-person" data-href="/people/assign_roles?id='+d.id+'"><td>'+d.fathers_maiden_name+
							'</td><td>'+d.mothers_maiden_name+'</td><td>'+d.first_name+'</td></tr>';
						})
						if (html_data==null){
							html_data = '<tr><td colspan="3">No se encontr√≥ persona</td></tr>'
						}
						$('#search_person_result tbody').html(html_data); 
						$('#search_person_result').slideDown(); 
					}
					_this.find(':button[type="submit"]').prop('disabled', false);
					$('.clickable-person').click(function(){
						window.location.href=$(this).attr('data-href')
					})
				}
			});
		})
	});
</script>
<% end %>
